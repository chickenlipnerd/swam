@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Page.Title = "Password Reset";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // Setup validation
    Validation.RequireField("newPassword", "The new password field is required.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("newPassword", "The new password and confirmation password do not match."));
    Validation.RequireField("passwordResetToken", "The password reset token field is required.");
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "New password must be at least 6 characters"));

    if (IsPost && Validation.IsValid()) {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) {
            isSuccess = true;
        } else {
            ModelState.AddError("passwordResetToken", "The password reset token is invalid.");
            tokenExpired = true;
        }
    }
}
<div class="row">
    <div class="content col-sm-12">
        <hgroup class="title">
            <h1>@Page.Title.</h1>
            <h3>Use the form below to reset your password.</h3>
        </hgroup>

        @if (!WebMail.SmtpServer.IsEmpty()) {
            if (!Validation.IsValid()) {
                <p class="validation-summary-errors">
                    @if (tokenExpired) {
                        <text>The password reset token is incorrect or may be expired. Visit the <a href="~/Account/ForgotPassword">forgot password page</a> 
                        to generate a new one.</text>
                    } else {
                        <text>Could not reset password. Please correct the errors and try again.</text>
                    }
                </p>
            }

            if (isSuccess) {
                <p class="message-success">
                    Password changed! Click <a href="~/Account/Login" title="Log in">here</a> to log in.
                </p>
            }
            <div class="form">
                <div class="row profile-information">
                    <div class="form-item col-md-9">
                        <form method="post">
                            @AntiForgery.GetHtml()
                            <fieldset>
                                <legend>Password Change Form</legend>
                                <div class="col-sm-4 username">
                                    <!---->
                                    <div class="new-password form-group">
                                        <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>New password</label> 
                                        <input class="form-control" type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                                        @Html.ValidationMessage("newPassword")
                                    </div>
                                    <div class="confirm-password form-group">
                                        <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Confirm password</label> 
                                        <input class="form-control" type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                                        @Html.ValidationMessage("confirmPassword")
                                    </div>
                                    <div class="reset-token form-group">
                                        <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) {<text>class="error-label"</text>}>Password reset token</label> 
                                        <input class="form-control" type="text" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                                        @Html.ValidationMessage("resetToken")
                                    </div>
                                    <div class="form-group">
                                        <input class="btn btn-default" type="submit" value="Reset password" disabled="@isSuccess"/>
                                    </div>
                                </div>
                            </fieldset>
                        </form>
                        <!---->
                    </div>
                </div>
            </div>
        } else {
            <p class="message-info">
                Password recovery is disabled for this website because the SMTP server is 
                not configured correctly. Please contact the owner of this site to reset 
                your password.
            </p>
        }
    </div>
</div>
